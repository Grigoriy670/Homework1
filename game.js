
function guessNumberGameButton() {
    const maxNumber = 100;
    const randomNumber = Math.floor(Math.random() * maxNumber) + 1; 
    let attempts = 0;
    
    while (true) {
        let guess = prompt(`–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ ${maxNumber} (–≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤—ã—Ö–æ–¥–∞)`);
        
        
        if (guess === null || guess.toLowerCase() === '–æ—Ç–º–µ–Ω–∞') {
            alert('–ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
            return;
        }
        
       
        guess = Number(guess);
        if (isNaN(guess) || guess < 1 || guess > maxNumber) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100!');
            continue; 
        }
        
        attempts++;
        
        if (guess === randomNumber) {
            alert(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ ${randomNumber} –∑–∞ ${attempts} –ø–æ–ø—ã—Ç–æ–∫!`);
            return; 
        } else if (guess > randomNumber) {
            alert('‚¨á –ú–µ–Ω—å—à–µ! –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.');
        } else {
            alert('‚¨Ü –ë–æ–ª—å—à–µ! –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.');
        }
    }
}


function simpleArithmetic() {
    const operations = ['+', '-', '/', '*'];
    let operation = operations[Math.floor(Math.random() * operations.length)];
    let a, b, result;
    let userAnswer;

    a = Math.floor(Math.random() * 10) + 1;
    b = Math.floor(Math.random() * 10) + 1;

    switch (operation) {
        case '+':
            userAnswer = prompt(`–°–ª–æ–∂–∏—Ç–µ ${a} –∏ ${b}`);
            result = a + b;
            break;

        case '-':
            userAnswer = prompt(`–í—ã—á—Ç–∏—Ç–µ ${a} –∏ ${b}`);
            result = a - b;
            break;

        case '*':
            userAnswer = prompt(`–£–º–Ω–æ–∂—å—Ç–µ ${a} –∏ ${b}`);
            result = a * b;
            break;

        case '/':
            userAnswer = prompt(`–†–∞–∑–¥–µ–ª–∏—Ç–µ ${a} –∏ ${b}`);
            result = a / b;
            break;
    }

    
    if (userAnswer === null) {
        alert('–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞');
        return;
    }

   
    userAnswer = +userAnswer;

    if (userAnswer === result) {
        alert('–≠—Ç–æ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç');
    } else {
        alert(`–ù–µ –≤–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ${result}`);
    }
}

function reverseString() {
    let text = prompt('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç');
    alert(text === null ? '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤–≤–æ–¥' : text.split('').reverse().join(''));
}
